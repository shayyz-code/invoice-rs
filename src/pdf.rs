use std::error::Error;
use std::fs;

use headless_chrome::Browser;

use crate::models::Invoice;

pub fn generate_invoice_pdf(invoice: &Invoice) -> Result<(), Box<dyn Error>> {
    let browser = Browser::default()?;

    let tab = browser.new_tab()?;

    let html_path = generate_invoice_html(&invoice)?;

    // Navigate to the local HTML file
    let file_path = format!(
        "file://{}/{}",
        std::env::current_dir()?.display(),
        html_path
    );
    tab.navigate_to(&file_path)?;

    // Take pdf of the entire browser window
    let pdf = tab.wait_until_navigated()?.print_to_pdf(None)?;
    // Save the pdf to disc
    std::fs::write(format!("invoice_{}.pdf", invoice.number), pdf)?;

    fs::remove_file(&html_path)?;

    Ok(())
}

pub fn generate_invoice_html(invoice: &Invoice) -> Result<String, Box<dyn std::error::Error>> {
    let html = format!(
        r#"
        <html>
        <head>
            <meta charset="utf-8" />
            <style>
                body {{
                    font-family: 'Inter', sans-serif;
                    background-color: #f9f9fb;
                    color: #333;
                    padding: 40px;
                }}
                .invoice {{
                    max-width: 600px;
                    margin: auto;
                    background: white;
                    border-radius: 12px;
                    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
                    padding: 40px;
                }}
                h1 {{
                    color: #a855f7;
                    text-align: center;
                }}
                p {{ line-height: 1.6; }}
                .footer {{
                    text-align: center;
                    color: #777;
                    margin-top: 40px;
                    font-size: 0.9em;
                }}
            </style>
        </head>
        <body>
            <div class="invoice">
                <h1>Invoice</h1>
                <p><strong>Invoice Number:</strong> {}</p>
                <p><strong>Customer:</strong> {}</p>
                <p><strong>Total:</strong> ${:.2}</p>
                <p><strong>Status:</strong> {}</p>
                <div class="footer">Generated by invoice-rs</div>
            </div>
        </body>
        </html>
    "#,
        invoice.number, invoice.client, invoice.total, invoice.status
    );

    let html_path = format!("invoice_{}.html", invoice.number);

    fs::write(&html_path, &html)?;

    Ok(html_path)
}
